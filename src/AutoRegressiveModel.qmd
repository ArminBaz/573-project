---
title: "Auto Regressive Model"
author: "Armin Bazarjani"
date: "`r Sys.Date()`"
echo: false
format: pdf
---

```{r}
#| message: false
library(here)
library(readxl)  # for reading excel files
library(modelsummary)  # for summarizing data
library(cmdstanr)  # use two cores
library(posterior)
library(bayesplot)
library(tidyverse)
library(Lahman)
library(latex2exp)
library(ggplot2)
```

## Data Import
```{r}
data("Batting")


# Data Processing Function
prepare_batting_data <- function(batting_data) {
  batting_processed <- batting_data %>%
    # Filter for sufficient at-bats (minimum 100 to be meaningful)
    filter(AB >= 100) %>%
    # Calculate batting average
    mutate(BA = H / AB) %>%
    # Group by player and calculate career year
    group_by(playerID) %>%
    arrange(yearID) %>%
    mutate(
      career_year = row_number(),
      # Only keep players with at least 3 seasons
      career_length = n()
    ) %>%
    filter(career_length >= 3) %>%
    ungroup()
  
  return(batting_processed)
}

processed_data <- prepare_batting_data(Batting)

# Prepare data for a single player (Derek Jeter)
player_data <- processed_data %>%
  filter(playerID == "jeterde01")
```

## Variable Summary
```{r}
#| label: tbl-summ-var
#| tbl-cap: Descriptive statistics of batting average by career year
library(modelsummary)

datasummary(
  BA ~ N + Mean + SD + Min + Max,
  data = player_data,
  output = "markdown"
)
```


## Analysis
```{r}
#| include: false
# Load the Stan model
mod_ar <- cmdstan_model("stan_code/batting_model_ar.stan")

# Form the data list for Stan
stan_dat <- list(
    N = nrow(player_data),
    AB = player_data$AB,
    H = player_data$H,
    Year = player_data$career_year
)

# Run the Stan model
fit_ar <- mod_ar$sample(
    data = stan_dat,
    seed = 1234,  # for reproducibility
    chains = 4,
    parallel_chains = 4,
    iter_warmup = 2000,
    iter_sampling = 2000
)
```

# Results

As shown in the rank histogram in @fig-rank-hist-fit below, the chains mixed well.

```{r}
#| label: fig-rank-hist-fit
#| fig-cap: Rank histogram of the posterior distributions of model parameters.
as_draws(fit_ar) |>
    mcmc_rank_hist(pars = c("theta_base", "learning_rate", "rho"))
```

```{r}
# Then use the correct parameter names
p_ar <- as_draws(fit_ar) |>
    mcmc_rank_hist(pars = c("theta_base", "learning_rate", "rho")) +
    theme_bw() +
    labs(title = "Rank Histogram - Autoregressive Model")

# Save the plot
ggsave("../figures/autoregressive_model_rank_histogram.pdf", p_ar, width = 8, height = 6)
```

@tbl-summ-fit shows the posterior distributions of $\theta_{\text{base}}$ (base batting average), learning_rate (yearly change), and predicted batting averages for selected career years.

```{r}
#| label: tbl-summ-fit
#| tbl-cap: Posterior summary of the model parameters.
summ_fit <- fit$draws() |>
    subset_draws(variable = c("theta_base", "learning_rate", "predicted_ba[1]", "predicted_ba[5]", "predicted_ba[10]")) |>
    rename_variables(
        "Base BA" = theta_base,
        "Learning Rate" = learning_rate,
        "Year 1 BA" = `predicted_ba[1]`,
        "Year 5 BA" = `predicted_ba[5]`,
        "Year 10 BA" = `predicted_ba[10]`
    ) |>
    summarise_draws()
knitr::kable(summ_fit, digits = 3)
```

@fig-career-trajectory shows the model's estimates of the player's (Derek Jeter) career batting trajectory

```{r}
# Create trajectory plot
draws_ar <- fit_ar$draws("predicted_ba")
pred_df_ar <- data.frame(
  year = 1:18,
  mean = apply(draws_ar, 3, mean),
  lower = apply(draws_ar, 3, function(x) quantile(x, 0.05)),
  upper = apply(draws_ar, 3, function(x) quantile(x, 0.95))
)

# Plot
p_traj_ar <- ggplot() +
    geom_ribbon(data = pred_df_ar,
                aes(x = year, ymin = lower, ymax = upper),
                fill = "lightblue", alpha = 0.3) +
    geom_line(data = pred_df_ar,
              aes(x = year, y = mean),
              color = "blue") +
    geom_point(data = player_data,
               aes(x = career_year, y = BA)) +
    labs(x = "Career Year",
         y = "Batting Average",
         title = "Career Batting Average Trajectory (AR Model)") +
    scale_y_continuous(limits = c(0.25, 0.36), 
                      breaks = seq(0.25, 0.36, 0.02)) +
    theme_minimal()
```
```{r}
p_traj_ar
```
```{r}
ggsave("../figures/jeter_ar_model_1.pdf", p_traj_ar, width = 8, height = 6)
```